%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: SCSS
scope: source.scss
version: 2

extends: Packages/CSS/CSS.sublime-syntax

file_extensions:
  - scss

###############################################################################

variables:

  # CSS overrides

  ident_start: (?:{{nmstart}}|@+{)

  selector_begin: (?={{selector_start}}|&|#{)
  selector_end: (?=[;{}])

  tag_name_begin: (?=[[:alpha:]]|@+{)

  property_or_selector_begin: (?={{selector_start}}|[-&]|{{ident_start}})
  nested_selector_start: '[%.:#&*\[{{combinator_char}}]'

###############################################################################

contexts:

###[ CSS ]#####################################################################

  stylesheet:
    - include: header
    - include: comments
    - include: properties-or-selectors
    - include: property-lists
    - include: scss-declaration
    - include: scss-at-rules
    - include: at-rules
    - include: rule-terminators

###[ Yekyll front matter ]#####################################################

  header:
    - match: '^---$'
      scope: meta.frontmatter.jekyll punctuation.section.frontmatter.begin.jekyll
      embed: scope:source.yaml
      embed_scope: meta.frontmatter.jekyll source.yaml
      escape: '^---$'
      escape_captures:
        0: meta.frontmatter.jekyll punctuation.section.frontmatter.end.jekyll

###[ CSS COMMENTS ]############################################################

  comments:
    - meta_append: true
    - include: sassdoc-comments
    - include: scss-line-comments

  block-comment-body:
    - meta_append: true
    - include: scss-interpolation

###[ SassDoc COMMENTS ]###########################################################

  sassdoc-comments:
    - match: /{3}
      scope: punctuation.definition.comment.sassdoc.scss
      push: sassdoc-comments-body

  sassdoc-comments-body:
    - meta_scope: comment.line.double-slash.scss comment.line.documentation.sassdoc.scss
    - include: Packages/Markdown/Markdown.sublime-syntax#bold
    - include: Packages/Markdown/Markdown.sublime-syntax#italic
    - include: Packages/Markdown/Markdown.sublime-syntax#code-spans
    # @TODO maybe consider markdown inline links, images
    - match: \@\w+(?=\s|$)
      scope: entity.name.tag.documentation.sassdoc.scss
    - match: \n
      pop: 1

###[ SCSS COMMENTS ]###########################################################

  scss-line-comments:
    - match: /{2}
      scope: punctuation.definition.comment.scss
      push: scss-line-comments-body

  scss-line-comments-body:
    - meta_scope: comment.line.double-slash.scss
    - match: \n
      pop: 1

###[ CSS PROPERTIES OR SELECTORS ]#############################################

  properties-or-selectors:
    - match: '{{property_or_selector_begin}}'
      branch_point: property-or-selector
      branch:
        - maybe-property
        - selector-body

  maybe-property:
    - include: comments
    - include: property-end
    - include: property-identifiers
    - include: scss-interpolated-property

    # otherwise it is part of a selector
    - match: ''
      fail: property-or-selector

  property-end:
    # property values are followed/terminated by one of ; ) }
    - match: (?=[;)}])
      pop: 1

  selector-body:
    - meta_prepend: true
    - include: scss-interpolation
    - include: scss-placeholder-selector
    - match: (\&)([-_]+{{ident}})
      # &--bem_ish selectors
      captures:
        1: variable.language.parent.css
        2: entity.other.attribute-name.css

###[ CSS PROPERTY LISTS ]######################################################

  property-list-body:
    - meta_scope: meta.property-list.css meta.block.css
    - include: block-end
    - include: stylesheet

###[ CSS MEDIA QUERIES ]#######################################################

  media-query-group-body:
    - meta_append: true
    - include: scss-expression

###[ CSS VALUE EXPRESSIONS ]###################################################

  values:
    - include: value-prototype
    - include: comma-delimiters
    - include: arithmetic-operators
    - include: important-operators
    - include: vendor-prefixes
    - include: builtin-functions
    - include: color-values
    - include: line-name-lists
    - include: unicode-ranges
    - include: numeric-constants
    - include: quoted-strings
    - include: none-constants
    - include: scss-expression ## handle scss expressions before native functions etc.
    - include: constants-or-functions
    - include: illegal-groups

  value-prototype:
    - meta_append: true
    - include: scss-default-operators
    - include: scss-global-operators

  at-keyframe-identifier:
    - meta_prepend: true
    - include: scss-interpolation

  font-family-value-content:
    - meta_prepend: true
    - include: scss-expression

  font-property-value-content:
    - meta_prepend: true
    - include: scss-expression

###[ SCSS DEFAULT/GLOBAL VALUES ]###############################################

  scss-default-operators:
    - match: \!\s*(?i:default){{break}}
      scope: keyword.other.default.scss

  scss-global-operators:
    - match: \!\s*(?i:global){{break}}
      scope: keyword.other.global.scss

###[ CSS FUNCTION ARGUMENTS ]##################################################

  function-arguments-prototype:
    - meta_append: true
    - include: scss-expression

###[ SCSS PLACEHOLDER SELECTOR ]###############################################

  scss-placeholder-selector:
    - match: \%
      scope: entity.other.attribute-name.class.css punctuation.definition.entity.placeholder.scss
      # has same basic properties as a classname
      push: selector-class-identifier

###[ SCSS EXPRESSIONS ]########################################################

  scss-expression:
    - include: scss-expression-block
    - include: scss-declaration
    - include: scss-variables
    - include: scss-operators
    - include: sass-namespaced-functions

    # and most normal css values
    # - include: comma-delimiters
    # - include: arithmetic-operators
    # - include: important-operators
    # - include: vendor-prefixes
    - include: builtin-functions
    - include: color-values
    - include: line-name-lists
    - include: unicode-ranges
    - include: numeric-constants
    - include: quoted-strings
    - include: none-constants
    - include: constants-or-functions
    # - include: illegal-groups

  scss-expression-block:
    - match: '\((?!.*:)'  # if there is an : in it, assume it's a map
      captures:
        0: punctuation.section.group.begin.scss
      push:
        - meta_scope: meta.group.scss
        - include: scss-expression
        - match: '\)'
          scope: punctuation.section.group.end.scss
          pop: 1

###[ SCSS INTERPOLATION ]######################################################

  scss-interpolated-property:
    - match: '-?(?=#{)'
      push:
      - match: ''
        pop: 1
      - match: '(#)({)'
        captures:
          1: punctuation.definition.variable.scss
          2: punctuation.section.interpolation.begin.scss
        push:
          - property-value
          - scss-interpolation-body

  scss-interpolation:
    - match: '(#)({)'
      captures:
        1: punctuation.definition.variable.scss
        2: punctuation.section.interpolation.begin.scss
      push: scss-interpolation-body

  scss-interpolation-body:
    - clear_scopes: true
    - meta_scope: meta.interpolation.scss
    - include: scss-expression
    - match: '(})'
      scope: punctuation.section.interpolation.end.scss
      pop: 1

###[ SCSS STRINGS w/ INTERPOLATION ]###########################################

  single-quoted-string-body:
    - meta_prepend: true
    - include: scss-interpolation
  double-quoted-string-body:
    - meta_prepend: true
    - include: scss-interpolation
  single-quoted-url-body:
    - meta_prepend: true
    - include: scss-interpolation
  double-quoted-url-body:
    - meta_prepend: true
    - include: scss-interpolation
  unquoted-urls:
    - meta_prepend: true
    - include: scss-interpolation

###[ SCSS VARS ]###############################################################

  scss-variables:
    - match: '(({{ident}})(\.))?(\$)([a-zA-Z0-9_-][\w-]*)'
      scope: variable.other.scss
      captures:
        2: entity.name.namespace.scss
        3: punctuation.separator.namespace.scss
        4: punctuation.definition.variable.scss
    - include: scss-interpolation
    - include: scss-maps

###[ SCSS MAPS ]###############################################################

  scss-maps:
    - match: '\((?=.*:)'
      captures:
        0: punctuation.section.group.begin.scss
      push:
        - meta_scope: meta.group.css meta.map.arguments.scss
        - include: scss-variables
        - include: quoted-strings
        - match: '\)'
          scope: punctuation.section.group.end.scss
          pop: 1
        - match: '({{ident}})'
          captures:
            1: variable.parameter.scss
        - match: ':'
          scope: punctuation.separator.key-value.css
          push:
            - match: ','
              scope: punctuation.separator.sequence.css
              pop: 1
            - include: comments
            - include: terminator-pop
            - include: values

###[ SCSS DECLARATIONS ]#######################################################

  scss-declaration:
    - match: '(\$)([a-zA-Z0-9_-][\w-]*)(?=:)'
      captures:
        0: variable.declaration.scss
        1: punctuation.definition.variable.scss
      push:
        - include: terminator-pop
        - match: ':'
          scope: punctuation.separator.key-value.css
          push:
            - include: comments
            - include: terminator-pop
            - include: values

###[ SCSS FUNCTIONS ]##########################################################

  sass-namespaced-functions:
    - match: '\b(?!var)(({{ident}})(\.))?([a-z_-]+)(?=\()'
      scope: support.function.scss
      captures:
        2: entity.name.namespace.scss
        3: punctuation.separator.namespace.scss
      push:
        - meta_scope: meta.function-call.identifier.css variable.function.css
        - match: (?=\()
          set:
            - other-function-arguments-list-body
            - function-arguments-list-begin

###[ SCSS OPERATORS ]##########################################################

  scss-operators:
    - match: /|\*|\-\-|\-|\+\+|\+|~
      scope: keyword.operator.arithmetic.scss
    - match: $|%|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\|\||\?\:|%=|\+=|\-=|&=|\bnot\b|\bor\b|\band\b|\bwhen\b
      scope: keyword.operator.scss
    - match: '[.]{3}'
      scope: keyword.operator.spread.scss
    - match: (?:\s*)\b(not|or|and)(?=\s)
      captures:
        1: keyword.operator.scss
    - match: \btrue\b
      scope: constant.language.boolean.true.scss
    - match: \bfalse\b
      scope: constant.language.boolean.false.scss
    - match: \bnull\b
      scope: constant.language.null.scss

###[ SCSS @ Rules ]############################################################

  scss-at-rules:
    - match: '(@)(each){{break}}'
      captures:
        0: keyword.control.flow.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.each.scss
        - include: scss-variables
        - include: comma-delimiters
        - include: terminator-pop
        - match: \b(in){{break}}
          scope: keyword.operator.scss
          push:
            - include: terminator-pop
            - include: comments
            - include: comma-delimiters
            - include: var-function
            - include: scss-expression
    - match: '(@)(for){{break}}'
      captures:
        0: keyword.control.flow.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.for.scss
        - include: values
        - include: terminator-pop
        - match: (?:\s*)\b(from|to|through)(?=\s)
          captures:
            1: keyword.operator.scss
    - match: '(@)(while){{break}}'
      captures:
        0: keyword.control.flow.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.while.scss
        - include: scss-expression
        - include: terminator-pop
    - match: '(@)(if|else if|else){{break}}'
      captures:
        0: keyword.control.flow.conditional.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.conditional.scss
        - include: terminator-pop
        - include: values
    - match: '(@)(error){{break}}'
      captures:
        0: keyword.control.at-rule.error.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.scss
        - include: terminator-pop
        - include: scss-expression
        - include: quoted-strings
    - match: '(@)(warn){{break}}'
      captures:
        0: keyword.control.at-rule.warn.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.scss
        - include: terminator-pop
        - include: scss-expression
        - include: quoted-strings
    - match: '(@)(debug){{break}}'
      captures:
        0: keyword.control.at-rule.debugger.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.scss
        - include: terminator-pop
        - include: values
    - match: '(@)(at-root){{break}}'
      captures:
        0: keyword.control.directive.at-root.scss
        1: punctuation.definition.keyword.scss
    - match: '(@)(extend){{break}}'
      captures:
        0: keyword.control.directive.extend.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.extend.scss
        - include: terminator-pop
        - include: selectors
    - match: '((@)(mixin|function))\s+([\w-]+)'
      captures:
        1: keyword.control.directive.scss
        2: punctuation.definition.keyword.scss
        4: entity.name.function.scss
      push:
        - meta_scope: meta.function.declaration.scss
        - include: terminator-pop
        - match: '\('
          scope: punctuation.section.group.begin.scss
          push:
            - meta_scope: meta.function.parameters.scss
            - match: '\)'
              scope: punctuation.section.group.end.scss
              pop: 1
            - include: comma-delimiters
            - match: '(\$)([a-zA-Z0-9_-][\w-]*)'
              scope: variable.parameter.scss
              captures:
                1: punctuation.definition.variable.scss
              push:
                - match: '(?=[,\)])'
                  pop: 1
                - match: ':'
                  scope: punctuation.separator.key-value.css
                - match: '\b(false|true|null)\b'
                  scope: constant.language.scss
                - include: property-value-content
    - match: '((@)(include))\s+((([a-z]+)(\.))?([\w-]+))'
      captures:
        1: keyword.control.directive.scss
        2: punctuation.definition.keyword.scss
        4: variable.function.scss
        6: entity.name.namespace.scss
        7: punctuation.separator.namespace.scss
      push:
        - meta_scope: meta.function-call.scss
        - include: terminator-pop
        - match: '\('
          scope: punctuation.section.group.begin.scss
          push:
            - meta_scope: meta.function-call.arguments.scss
            - match: '\)'
              scope: punctuation.section.group.end.scss
              pop: 2
            - include: comments
            - include: comma-delimiters
            - match: ':'
              scope: punctuation.separator.key-value.css
            - include: values
            - match: '{{ident}}'
              scope: meta.generic-name.scss
    - match: '(@)(return){{break}}'
      captures:
        0: keyword.control.directive.return.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.scss
        - include: terminator-pop
        - include: property-value-content
    - match: '(@)(content){{break}}'
      captures:
        0: keyword.control.directive.content.scss
        1: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.scss
        - include: terminator-pop
        - match: '\('
          scope: punctuation.section.group.begin.scss
          push:
            - meta_scope: meta.function-call.arguments.scss
            - match: '\)'
              scope: punctuation.section.group.end.scss
              pop: 2
            - include: comments
            - include: comma-delimiters
            - match: '[.]{3}'
              scope: keyword.operator.spread.scss
            - match: ':'
              scope: punctuation.separator.key-value.css
            - include: values
            - match: '{{ident}}'
              scope: meta.generic-name.scss
    - match: '\s*((@)(use|forward){{break}})\s*'
      captures:
        1: keyword.control.directive.module.scss
        2: punctuation.definition.keyword.scss
      push:
        - meta_scope: meta.at-rule.module.scss
        - include: terminator-pop
        - match: '\b(as)\b\s+([a-zA-Z0-9_-]*(\*)?)'
          captures:
            1: keyword.control.as.scss
            2: meta.generic-name.scss
            3: constant.language.import-all.scss
        - match: '\b(show|hide)\b'
          scope: keyword.control.show-hide.scss
          push:
            - include: terminator-pop
            - include: comments
            - include: comma-delimiters
            - include: scss-expression
            - match: '{{ident}}'
              scope: meta.generic-name.scss
        - match: '(with)\s+(\()'
          captures:
            1: keyword.control.with.scss
            2: punctuation.section.group.begin.scss
          push:
            - match: '\)'
              scope: punctuation.section.group.end.scss
              pop: 1
            - include: comments
            - include: comma-delimiters
            - include: scss-declaration
            - include: scss-expression
        - include: comments
        - include: quoted-strings
