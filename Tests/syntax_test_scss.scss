// SYNTAX TEST "Packages/Sass/Syntaxes/SCSS.sublime-syntax"

//=============================================================================
// Yekyll front matter
// https://jekyllrb.com/docs/front-matter/
//=============================================================================

---
# <- meta.frontmatter.jekyll punctuation.section.frontmatter.begin.jekyll
#^^  meta.frontmatter.jekyll punctuation.section.frontmatter.begin.jekyll
layout: post
# ^^^^^^^^^^ source.yaml
title: Blogging Like a Hacker
---
// <- meta.frontmatter.jekyll punctuation.section.frontmatter.end.jekyll
//^   meta.frontmatter.jekyll punctuation.section.frontmatter.end.jekyll

//=============================================================================
// Comments
// https://sass-lang.com/documentation/syntax/comments/
//=============================================================================

// This comment won't be included in the CSS
// <- comment.line.double-slash.scss punctuation.definition.comment.scss
 // <- comment.line.double-slash.scss punctuation.definition.comment.scss
//^^^^^^^^^ comment.line.double-slash.scss - punctuation

/** But this comment will, except in compressed mode.
// <- comment.block.css punctuation.definition.comment.begin.css
//^ comment.block.css punctuation.definition.comment.begin.css
// ^ comment.block.css - punctuation

 * It can also contain interpolation:
 * 1 + 1 = #{1 + 1}
//         ^^^^^^^^ meta.interpolation.scss - comment
//             ^ keyword.operator

 * { item_description }
 // <- comment.block.css punctuation.definition.comment.css

 */
// <- comment.block.css - punctuation
 // <- comment.block.css punctuation.definition.comment.end.css
//^ comment.block.css punctuation.definition.comment.end.css
// ^ - comment


  button
  , button          // perhaps you want to type button:hover
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.scss

  , selector-ish    /* with comments at the end */
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.block.css

  , button:         // or maybe button::before
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.scss
  { // ; comment
// <- meta.selector.css
//^^ meta.property-list.css meta.block.css - comment
//  ^^^^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.scss
//  ^^ punctuation.definition.comment.scss

    color: /**/ // ; comment
//        ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//         ^^ comment.block.css punctuation.definition.comment.begin.css
//           ^^ comment.block.css punctuation.definition.comment.end.css
//              ^^^^^^^^^^^^^ comment.line.double-slash.scss
//              ^^ punctuation.definition.comment.scss
        darken(blue /**/) ; //comment
//     ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//                  ^^^^ comment.block.css
//                        ^^ meta.property-list.css meta.block.css - comment
//                          ^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.scss

  } // comment
// <- meta.property-list.css meta.block.css
//^ meta.property-list.css meta.block.css punctuation.section.block.end.css
// ^ - meta.property-list - meta.block - punctuation
//  ^^^^^^^^^^^ comment.line.double-slash.scss

//=============================================================================
// SassDoc Comments
// https://sass-lang.com/documentation/syntax/comments/#documentation-comments
//=============================================================================

/// SassDoc comments are **Markdown**, we only support some _mininal styling_
//                       ^^^^^^^^^^^^ markup.bold
//                                   ^ - markup.bold
//                                                          ^^^^^^^^^^^^^^^^^ markup.italic
//                                                                           ^ - markup.italic
/// Computes an exponent.
// <- comment.line.double-slash.scss punctuation.definition.comment.sassdoc.scss
//^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.scss comment.line.documentation.sassdoc.scss
/// @param {number} $base
///   The number to multiply by itself.
/// @param {integer (unitless)} $exponent
//  ^^^^^^ source.scss comment comment.line.documentation.sassdoc.scss entity.name.tag.documentation.sassdoc.scss
///   The number of `$base`s to multiply together.
//                  ^^^^^^^ markup.raw.inline
//                         ^ - markup.raw.inline
/// @return {number} `$base` to the power of `$exponent`.
//  ^^^^^^^ source.scss comment comment.line.documentation.sassdoc.scss entity.name.tag.documentation.sassdoc.scss

//=============================================================================
// Special Functions: url()
// https://sass-lang.com/documentation/syntax/special-functions/
// - element() is experimental and not yet implemented in any browser.
// - expression() and functions beginning with progid: are legacy Internet Explorer features and not implemented here.
//=============================================================================
@font-face {
    // This is parsed as a normal function call that takes a quoted string.
    src: url("#{$roboto-font-path}/Roboto-Thin.woff2") format("woff2");
//            ^^^^^^^^^^^^^^^^^^^^ meta.interpolation.scss
//                                ^ - meta.interpolation.scss
//              ^^^^^^^^^^^^^^^^^ variable.other.scss
//              ^ punctuation.definition.variable.scss
//                                ^ meta.string.css
    // This is parsed as a normal function call that takes an arithmetic expression.
    src: url($roboto-font-path + "/Roboto-Light.woff2") format("woff2");
    // This is parsed as an interpolated special function.
/* @TODO: unsure how this should be handled, */
    src: url(#{$roboto-font-path}/Roboto-Regular.woff2) format("woff2");
//           ^^^^^^^^^^^^^^^^^^^^ meta.interpolation.scss
//                               ^ -meta.interpolation.scss
//             ^^^^^^^^^^^^^^^^^ variable.other.scss
//             ^ punctuation.definition.variable.scss
//                               ^ meta.string.css
}

//=============================================================================
// Property Declarations
// https://sass-lang.com/documentation/style-rules/declarations/
//=============================================================================
.circle {
  $size: 100px;
//^^^^^ variable.declaration.scss
//^ punctuation.definition.variable.scss
//     ^ punctuation.separator.key-value.css
//       ^^^^^ meta.property-value.css meta.number.integer.decimal.css
//       ^^^ constant.numeric.value.css
//          ^^ constant.numeric.suffix.css
//            ^ punctuation.terminator
  width: $size;
// ^^^^^^^^^^^^ meta.property-list
//       ^^^^^ meta.property-value
// ^^^^ meta.property-name
//     ^ punctuation.separator.key-value.css
//       ^^^^^ variable.other.scss
//            ^ punctuation.terminator
  height: $size;
  border-radius: $size * 0.5;
// ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list
// ^^^^^^^^^^^^ meta.property-name
//              ^^^^^^^^^^^^ meta.property-value
//             ^ punctuation.separator.key-value.css
//               ^^^^^ variable.other.scss
//                     ^ keyword.operator.arithmetic
//                       ^ meta.number.float.decimal.css constant.numeric.value.css
//                          ^ punctuation.terminator
}

//=============================================================================
// Interpolation
// https://sass-lang.com/documentation/style-rules/declarations/#interpolation
//=============================================================================
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }
  #{$property}: $value;
}

.gray {
  @include prefix(filter, grayscale(50%), moz webkit);
}
