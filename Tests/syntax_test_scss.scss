// SYNTAX TEST "Packages/Sass/Syntaxes/SCSS.sublime-syntax"

//=============================================================================
// Yekyll front matter
// https://jekyllrb.com/docs/front-matter/
//=============================================================================

---
# <- meta.frontmatter.jekyll punctuation.section.frontmatter.begin.jekyll
#^^  meta.frontmatter.jekyll punctuation.section.frontmatter.begin.jekyll
layout: post
# ^^^^^^^^^^ source.yaml
title: Blogging Like a Hacker
---
// <- meta.frontmatter.jekyll punctuation.section.frontmatter.end.jekyll
//^   meta.frontmatter.jekyll punctuation.section.frontmatter.end.jekyll

//=============================================================================
// Comments
// https://sass-lang.com/documentation/syntax/comments/
//=============================================================================

// This comment won't be included in the CSS
// <- comment.line.double-slash.scss punctuation.definition.comment.scss
 // <- comment.line.double-slash.scss punctuation.definition.comment.scss
//^^^^^^^^^ comment.line.double-slash.scss - punctuation

/** But this comment will, except in compressed mode.
// <- comment.block.css punctuation.definition.comment.begin.css
//^ comment.block.css punctuation.definition.comment.begin.css
// ^ comment.block.css - punctuation

 * It can also contain interpolation:
 * 1 + 1 = #{1 + 1}
//         ^^^^^^^^ meta.interpolation.scss - comment
//             ^ keyword.operator

 * { item_description }
 // <- comment.block.css punctuation.definition.comment.css

 */
// <- comment.block.css - punctuation
 // <- comment.block.css punctuation.definition.comment.end.css
//^ comment.block.css punctuation.definition.comment.end.css
// ^ - comment


  button
  , button          // perhaps you want to type button:hover
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.scss

  , selector-ish    /* with comments at the end */
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.block.css

  , button:         // or maybe button::before
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.scss
  { // ; comment
// <- meta.selector.css
//^^ meta.property-list.css meta.block.css - comment
//  ^^^^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.scss
//  ^^ punctuation.definition.comment.scss

    color: /**/ // ; comment
//        ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//         ^^ comment.block.css punctuation.definition.comment.begin.css
//           ^^ comment.block.css punctuation.definition.comment.end.css
//              ^^^^^^^^^^^^^ comment.line.double-slash.scss
//              ^^ punctuation.definition.comment.scss
        darken(blue /**/) ; //comment
//     ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//                  ^^^^ comment.block.css
//                        ^^ meta.property-list.css meta.block.css - comment
//                          ^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.scss

  } // comment
// <- meta.property-list.css meta.block.css
//^ meta.property-list.css meta.block.css punctuation.section.block.end.css
// ^ - meta.property-list - meta.block - punctuation
//  ^^^^^^^^^^^ comment.line.double-slash.scss

//=============================================================================
// SassDoc Comments
// https://sass-lang.com/documentation/syntax/comments/#documentation-comments
//=============================================================================

/// SassDoc comments are **Markdown**, we only support some _mininal styling_
//                       ^^^^^^^^^^^^ markup.bold
//                                   ^ - markup.bold
//                                                          ^^^^^^^^^^^^^^^^^ markup.italic
//                                                                           ^ - markup.italic
/// Computes an exponent.
// <- comment.line.double-slash.scss punctuation.definition.comment.sassdoc.scss
//^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.scss comment.line.documentation.sassdoc.scss
/// @param {number} $base
///   The number to multiply by itself.
/// @param {integer (unitless)} $exponent
//  ^^^^^^ source.scss comment comment.line.documentation.sassdoc.scss entity.name.tag.documentation.sassdoc.scss
///   The number of `$base`s to multiply together.
//                  ^^^^^^^ markup.raw.inline
//                         ^ - markup.raw.inline
/// @return {number} `$base` to the power of `$exponent`.
//  ^^^^^^^ source.scss comment comment.line.documentation.sassdoc.scss entity.name.tag.documentation.sassdoc.scss

//=============================================================================
// Special Functions: url()
// https://sass-lang.com/documentation/syntax/special-functions/
// - element() is experimental and not yet implemented in any browser.
// - expression() and functions beginning with progid: are legacy Internet Explorer features and not implemented here.
//=============================================================================
@font-face {
    // This is parsed as a normal function call that takes a quoted string.
    src: url("#{$roboto-font-path}/Roboto-Thin.woff2") format("woff2");
//            ^^^^^^^^^^^^^^^^^^^^ meta.interpolation.scss
//                                ^ - meta.interpolation.scss
//              ^^^^^^^^^^^^^^^^^ variable.other.scss
//              ^ punctuation.definition.variable.scss
//                                ^ meta.string.css
    // This is parsed as a normal function call that takes an arithmetic expression.
    src: url($roboto-font-path + "/Roboto-Light.woff2") format("woff2");
    // This is parsed as an interpolated special function.
/* TODO: unsure how this should be handled, */
    src: url(#{$roboto-font-path}/Roboto-Regular.woff2) format("woff2");
//           ^^^^^^^^^^^^^^^^^^^^ meta.interpolation.scss
//                               ^ -meta.interpolation.scss
//             ^^^^^^^^^^^^^^^^^ variable.other.scss
//             ^ punctuation.definition.variable.scss
}

//=============================================================================
// Property Declarations
// https://sass-lang.com/documentation/style-rules/declarations/
//=============================================================================
.circle {
  $size: 100px;
//^^^^^ variable.declaration.scss
//^ punctuation.definition.variable.scss
//     ^ punctuation.separator.key-value.css
//       ^^^^^ meta.property-value.css meta.number.integer.decimal.css
//       ^^^ constant.numeric.value.css
//          ^^ constant.numeric.suffix.css
//            ^ punctuation.terminator
  width: $size;
// ^^^^^^^^^^^^ meta.property-list
//       ^^^^^ meta.property-value
// ^^^^ meta.property-name
//     ^ punctuation.separator.key-value.css
//       ^^^^^ variable.other.scss
//            ^ punctuation.terminator
  height: $size;
  border-radius: $size * 0.5;
// ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list
// ^^^^^^^^^^^^ meta.property-name
//              ^^^^^^^^^^^^ meta.property-value
//             ^ punctuation.separator.key-value.css
//               ^^^^^ variable.other.scss
//                     ^ keyword.operator.arithmetic
//                       ^ meta.number.float.decimal.css constant.numeric.value.css
//                          ^ punctuation.terminator
}

//=============================================================================
// Interpolation
// https://sass-lang.com/documentation/style-rules/declarations/#interpolation
//=============================================================================
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
//   ^^^^^^^^^^ meta.interpolation.scss
//             ^ - meta.interpolation.scss
//   ^ punctuation.definition.variable.scss
//    ^ punctuation.section.interpolation.begin.scss
//            ^ punctuation.section.interpolation.end.scss
//     ^^^^^^^ variable.other.scss
//              ^^^^^^^^^^^^ meta.interpolation.scss
//                          ^ - meta.interpolation.scss
//              ^ punctuation.definition.variable.scss
//               ^ punctuation.section.interpolation.begin.scss
//                         ^ punctuation.section.interpolation.end.scss
//                ^^^^^^^^^ variable.other.scss
  }
  #{$property}: $value;
//^^^^^^^^^^^^ meta.interpolation.scss
//            ^ - meta.interpolation.scss
//^ punctuation.definition.variable.scss
// ^ punctuation.section.interpolation.begin.scss
//           ^ punctuation.section.interpolation.end.scss
//  ^^^^^^^^^ variable.other.scss
}

.gray {
  @include prefix(filter, grayscale(50%), moz webkit);
}

//=============================================================================
// Nesting
// TODO: this is currently unimplemented,
// as it would explode the complexity of the selector/property branching.
// https://sass-lang.com/documentation/style-rules/declarations/#nesting
//=============================================================================
.enlarge {
  font-size: 14px;
  transition: {
    property: font-size;
    duration: 4s;
    delay: 2s;
  }

  &:hover { font-size: 36px; }
}

.info-page {
  margin: auto {
    bottom: 10px;
    top: 2px;
  }
}

//=============================================================================
// Custom Properties
// https://sass-lang.com/documentation/style-rules/declarations/#custom-properties
//=============================================================================
$primary: #81899b;
$accent: #302e24;
$warn: #dfa612;

:root {
  --primary: #{$primary};
//^^^^^^^^^ meta.property-name.css entity.other.custom-property.css
  --accent: #{$accent};
  --warn: #{$warn};
//        ^^^^^^^^ meta.interpolation.scss
//                ^ - meta.interpolation.scss
//        ^ punctuation.definition.variable.scss
//         ^ punctuation.section.interpolation.begin.scss
//               ^ punctuation.section.interpolation.end.scss
//          ^^^^^ variable.other.scss
  // Even though this looks like a Sass variable, it's valid CSS so it's not
  // evaluated.
  --consumed-by-js: $primary;
}

//=============================================================================
// Parent Selector
// https://sass-lang.com/documentation/style-rules/parent-selector/
//=============================================================================
.alert {
  // The parent selector can be used to add pseudo-classes to the outer
  // selector.
  &:hover {
//^ variable.language.parent.css
    font-weight: bold;
  }

  // It can also be used to style the outer selector in a certain context, such
  // as a body set to use a right-to-left language.
  [dir=rtl] & {
//          ^ variable.language.parent.css
    margin-left: 0;
    margin-right: 10px;
  }

  // You can even use it as an argument to pseudo-class selectors.
  :not(&) {
//     ^ variable.language.parent.css
    opacity: 0.8;
  }
}

.accordion {
  max-width: 600px;
  margin: 4rem auto;
  width: 90%;
  font-family: "Raleway", sans-serif;
  background: #f4f4f4;

  &__copy {
//^ variable.language.parent.css
    display: none;
    padding: 1rem 1.5rem 2rem 1.5rem;
    color: gray;
    line-height: 1.6;
    font-size: 14px;
    font-weight: 500;

    &--open {
      display: block;
    }
  }
}

//=============================================================================
// Placeholder Selectors
// https://sass-lang.com/documentation/style-rules/placeholder-selectors/
//=============================================================================
.alert:hover, %strong-alert {
//            ^^^^^^^^^^^^^ entity.other.attribute-name.class.css
//            ^             punctuation.definition.entity.placeholder.scss
  font-weight: bold;
}

%strong-alert:hover {
//^^^^^^^^^^^ entity.other.attribute-name.class.css
//<-          punctuation.definition.entity.placeholder.scss
  color: red;
}

%toolbelt {
//^^^^^^^ entity.other.attribute-name.class.css
//<-      punctuation.definition.entity.placeholder.scss
  box-sizing: border-box;
  border-top: 1px rgba(#000, .12) solid;
  padding: 16px 0;
  width: 100%;

  &:hover { border: 2px rgba(#000, .5) solid; }
}

.action-buttons {
  @extend %toolbelt;
//        ^^^^^^^^^ entity.other.attribute-name.class.css
//        ^         punctuation.definition.entity.placeholder.scss
  color: #4285f4;
}

//=============================================================================
// Variables
// https://sass-lang.com/documentation/variables/
//=============================================================================
$base-color: #c6538c;
// ^^^^^^^^ variable.declaration.scss
//         ^ - variable.declaration.scss
//<-        punctuation.definition.variable.scss
$border-dark: rgba($base-color, 0.88);
// ^^^^^^^^^ variable.declaration.scss
//          ^ - variable.other.scss
//<-         punctuation.definition.variable.scss
//                 ^^^^^^^^^^^ variable.other.scss
//                            ^ - variable.other.scss
//                 ^           punctuation.definition.variable.scss

.alert {
  border: 1px solid $border-dark;
}

//=============================================================================
// Default Values
// https://sass-lang.com/documentation/variables/#default-values
//=============================================================================
$black: #000 !important;
//           ^^^^^^^^^^ keyword.other.important.css
$black: #000 !default;
//           ^^^^^^^^ keyword.other.default.scss
$border-radius: 0.25rem !default;
//                      ^^^^^^^^ keyword.other.default.scss
$box-shadow: 0 0.5rem 1rem rgba($black, 0.15) !default;

code {
  border-radius: $border-radius;
  box-shadow: $box-shadow;
}

//=============================================================================
// Shadowing (Global Values)
// https://sass-lang.com/documentation/variables/#shadowing
//=============================================================================

$variable: first global value;

.content {
  $variable: second global value !global;
//                               ^^^^^^^ keyword.other.global.scss
  value: $variable;
}
